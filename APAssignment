#!/bin/bash

#assigning variables to store the result
declare -i count
declare -i maleCount
declare -i femaleCount
declare -i nonILCount
declare -i response=0
declare -i userChoice=0
declare nonIl
declare gender
count=0
maleCount=0
femaleCount=0
nonILCount=0

#sorting the file based on users choice
function uf_sort_order(){
	if (($1 == 1))
	then
		sort -k1.1,1.16 < $2 > $3
	elif (($1 == 2))
	then
		sort -k1.17,1.56 < $2 > $3
	elif (($1 == 3))
	then
		sort -k1.57,1.64 < $2 > $3
	elif (($1 == 4))
	then
		echo "In 4"
		sort -k1.65,1.72 < $2 > $3
	elif (($1 == 5))
	then
		sort -k1.73,1.81 < $2 > $3
	elif (($1 == 6))
	then
		sort -k1.82,1.88 < $2 > $3
	elif (($1 == 7))
	then
		sort -k1.89,1.120 < $2 > $3
	elif (($1 == 8))
	then
		sort -k1.121,1.128 < $2 > $3
	elif (($1 == 9))
	then
		sort -k1.129,1.144 < $2 > $3
	elif (($1 == 10))
	then
		sort -k1.145,1.160 < $2 > $3
	else (($1 == 11))
		sort -k1.161,1.163 < $2 > $3
	fi
	current_dir=$(pwd)
	echo $current_dir
	echo $3
}

#storing the counts for 1-3 parameters
while IFS=: read -r -a var
do
        gender=${var:64:1};
	nonIl=${var:120:2};
	if [ "$gender" == "M" ]
	then
		((maleCount++))
	else
		((femaleCount++))
	fi
	if [ "$nonIl" != "IL" ]
	then
		((nonILCount++))
	fi
done <$1

#displaying the respective count based on users choice
if [ $2 == '1' ]
then
	echo "Male Count= $maleCount"
fi
if [ $2 == '2' ]
then
	echo "Female Count= $femaleCount"
fi	
if [ $2 == '3' ]
then
	echo "Non IL Count= $nonILCount"
fi
if [ $2 == '4' ]
then
	#allows user to select a column to sort and create new file
	echo -n "Enter sort order option from 1-11 "
	read response
	if (( response > 0 && response < 12 ))
	then
		uf_sort_order $response $1 newFile.txt
		#prompts user to select sorting as optional
		echo -n "Do you still want to continue sorting file? 1-Yes/2-N0 "
		read userChoice
		if (($userChoice == 1 ))
		then
			echo -n "Enter sort order option from 1-11 "
			read response 
			if ((response > 0 && response < 12))
			then
				uf_sort_order $response newFile.txt newFile2.txt
			fi
			# ask user if he still wants to sort
			echo -n "Do you still want to continue sorting file? 1-Yes/2-No "
			read userChoice
			if (($userChoice == 1))
			then
				echo -n "Enter the sort order option from 1-11 "
				read response
				if ((response > 0 && response < 12))
				then
					uf_sort_order $response newFile2.txt newFile3.txt
				fi
			else (($userChoice == 2))
				echo -n "You choose to quit!"
			fi
		else (($userChoice == 2))
			echo -n "You choose to quit!"
		fi
	else
		echo -n "Error Response. Please enter a valid option. "
	fi
fi
if (($2 > 4))
then
	echo -n "Invalid Response. Please enter a valid option between 1-4 "
fi
